import{e as n,A as s,f as a}from"./index-CFOCruvU.js";const h=async(o,e,r)=>{try{const t=new FormData;return t.append("pdfFile",r),t.append("id",e.id),t.append("title",e.title),t.append("composer",e.composer),t.append("isFavorite",String(e.isFavorite)),t.append("dateAdded",e.dateAdded.toISOString()),(await a(`/sheet-music/${o}`,t)).pdfPath}catch(t){throw console.error("Error saving sheet music:",t),t instanceof s&&t.isConnectionError?new s("Unable to upload sheet music.",0,!0):t}},i=async o=>{try{const e=await n(`/sheet-music/${o}`);return!e||e.length===0?[]:e.map(r=>({...r,dateAdded:new Date(r.dateAdded)}))}catch(e){throw console.error("Error getting user sheet music:",e),e instanceof s&&e.isConnectionError?new s("Unable to load your sheet music library.",0,!0):e}},u=async(o,e,r)=>{try{await n(`/sheet-music/${o}/${e}`,{method:"PUT",body:JSON.stringify({title:r.title,composer:r.composer,isFavorite:r.isFavorite})})}catch(t){throw console.error("Error updating sheet music:",t),t instanceof s&&t.isConnectionError?new s("Unable to update sheet music.",0,!0):t}},p=async(o,e)=>{try{await n(`/sheet-music/${o}/${e}`,{method:"DELETE"})}catch(r){throw console.error("Error deleting sheet music:",r),r instanceof s&&r.isConnectionError?new s("Unable to delete sheet music.",0,!0):r}},l=async o=>i(o);export{p as d,l as f,i as g,h as s,u};
